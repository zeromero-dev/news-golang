package web


templ UploadPage() {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<title>Upload New Post - Test News</title>
			<script src="https://unpkg.com/htmx.org@1.9.6"></script>
			<script src="https://cdn.tailwindcss.com"></script>
			<style>
				.success-message {
					opacity: 0;
					transition: opacity 0.5s ease-in-out;
				}
				.success-message.show {
					opacity: 1;
				}
			</style>
		</head>
		<body class="bg-gray-100 min-h-screen">
			<nav class="bg-gray-800 text-white p-4">
				<div class="container mx-auto flex justify-between">
					<a href="/" class="font-bold">Test News</a>
					<div>
						<a href="/web" class="mr-4 hover:text-blue-300 transition-colors">Home</a>
						<a href="/web/posts" class="mr-4 hover:text-blue-300 transition-colors">Posts</a>
						<a href="/web/upload" class="mr-4 hover:text-blue-300 transition-colors bg-blue-700 px-3 py-1 rounded">Upload</a>
					</div>
				</div>
			</nav>
			
			<div class="container mx-auto p-6">
				<div class="bg-white rounded-lg shadow-lg p-8 max-w-2xl mx-auto">
					<h1 class="text-2xl font-bold mb-6 text-gray-800">Create New Post</h1>
					
					<div id="success-message" class="success-message mb-6 p-4 bg-green-100 text-green-700 rounded-lg hidden">
						Post created successfully!
					</div>
					
					<form
						id="post-form"
						class="space-y-4"
						onsubmit="submitForm(event)"
					>
						<div>
							<label for="title" class="block text-sm font-medium text-gray-700 mb-1">Title</label>
							<input
								type="text"
								id="title"
								name="title"
								required
								class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
								placeholder="Enter post title"
							/>
						</div>
						
						<div>
							<label for="author" class="block text-sm font-medium text-gray-700 mb-1">Author</label>
							<input
								type="text"
								id="author"
								name="author"
								required
								class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
								placeholder="Enter author name"
							/>
						</div>
						
						<div>
							<label for="content" class="block text-sm font-medium text-gray-700 mb-1">Content</label>
							<textarea
								id="content"
								name="content"
								required
								rows="6"
								class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
								placeholder="Enter post content"
							></textarea>
						</div>
						
						<div class="flex justify-end">
							<button
								type="submit"
								class="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-md transition-colors duration-200"
							>
								Create Post
							</button>
						</div>
					</form>
				</div>
			</div>
			
			<script>
				function submitForm(event) {
					event.preventDefault();
					
					// Get form values
					const title = document.getElementById('title').value;
					const author = document.getElementById('author').value;
					const content = document.getElementById('content').value;
					
					// Create JSON payload
					const payload = {
						title: title,
						author: author,
						content: content
					};
					
					// Send request using fetch
					fetch('/api/posts', {
						method: 'POST',
						headers: {
							'Content-Type': 'application/json'
						},
						body: JSON.stringify(payload)
					})
					.then(response => {
						if (!response.ok) {
							return response.text().then(text => {
								throw new Error(text);
							});
						}
						return response.json();
					})
					.then(data => {
						// Show success message
						document.getElementById('post-form').reset();
						const msg = document.getElementById('success-message');
						msg.classList.remove('hidden');
						msg.classList.add('show');
						setTimeout(() => {
							msg.classList.remove('show');
							setTimeout(() => msg.classList.add('hidden'), 500);
						}, 3000);
					})
					.catch(error => {
						alert('Error creating post: ' + error.message);
					});
				}
			</script>
		</body>
	</html>
}